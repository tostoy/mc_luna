-- 创建目标表
CREATE TABLE odps_user_checked_date LIKE odps_user_checked_date_tmp;

--- 将历史表中的数据根据数据的创建的时间插入目标表对应的分区中
INSERT OVERWRITE TABLE odps_user_checked_date PARTITION (pt)
SELECT 
id, user_id, last_check_date, total_check_num, series_check_num, is_auto_reminder, created_at, updated_at, TO_CHAR(FROM_UNIXTIME(created_at), 'yyyymmdd') AS pt 
FROM odps_user_checked_date_tmp;

-- 验证数据总数
SELECT COUNT(*) FROM  odps_user_checked_date_tmp;
SELECT COUNT(*) FROM  odps_user_checked_date;

--- 创建增量表
CREATE TABLE odps_user_checked_date_inc LIKE odps_user_checked_date;

--- 删除历史表
ALTER TABLE odps_user_loan_order_tmp DROP IF EXISTS PARTITION (pt='history'); 






--- 合并数据并根据数据的创建时间更新到指定分区中
INSERT OVERWRITE TABLE odps_user_checked_date PARTITION (pt)
SELECT  
	CASE WHEN b.id IS NOT NULL THEN b.id ELSE a.id END AS id,
	CASE WHEN b.id IS NOT NULL THEN b.user_id ELSE a.user_id END AS user_id,
	CASE WHEN b.id IS NOT NULL THEN b.last_check_date ELSE a.last_check_date END AS last_check_date,
	CASE WHEN b.id IS NOT NULL THEN b.total_check_num ELSE a.total_check_num END AS total_check_num,
	CASE WHEN b.id IS NOT NULL THEN b.series_check_num ELSE a.series_check_num END AS series_check_num,
	CASE WHEN b.id IS NOT NULL THEN b.is_auto_reminder ELSE a.is_auto_reminder END AS is_auto_reminder,
	CASE WHEN b.id IS NOT NULL THEN b.created_at ELSE a.created_at END AS created_at,
	CASE WHEN b.id IS NOT NULL THEN b.updated_at ELSE a.updated_at END AS updated_at,
	CASE WHEN b.id IS NOT NULL THEN TO_CHAR(FROM_UNIXTIME(b.created_at), 'yyyymmdd') ELSE TO_CHAR(FROM_UNIXTIME(a.created_at), 'yyyymmdd') END AS pt
FROM
odps_user_checked_date a 
FULL OUTER JOIN odps_user_checked_date_inc b
ON a.id  = b.id ;

--- 删除无用数据
ALTER TABLE odps_user_checked_date_inc DROP IF EXISTS PARTITION (pt='${bdp.system.bizdate}'); 
