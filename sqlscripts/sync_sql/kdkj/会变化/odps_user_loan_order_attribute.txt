-- 创建目标表
CREATE TABLE odps_user_loan_order_attribute LIKE odps_user_loan_order_attribute_tmp;

--- 将历史表中的数据根据数据的创建的时间插入目标表对应的分区中
INSERT OVERWRITE TABLE odps_user_loan_order_attribute PARTITION (pt)
SELECT 
order_id, user_id, check_type, after_status, checked_at, tree, operator_name, created_at, updated_at, is_active, rank_data, is_new, amount, TO_CHAR(FROM_UNIXTIME(created_at), 'yyyymmdd') AS pt 
FROM odps_user_loan_order_attribute_tmp;

-- 验证数据总数
SELECT COUNT(*) FROM  odps_user_loan_order_attribute_tmp;
SELECT COUNT(*) FROM  odps_user_loan_order_attribute;

--- 创建增量表
CREATE TABLE odps_user_loan_order_attribute_inc LIKE odps_user_loan_order_attribute;

--- 删除历史表
ALTER TABLE odps_user_loan_order_attribute_tmp DROP IF EXISTS PARTITION (pt='history'); 



--- 合并数据并根据数据的创建时间更新到指定分区中
INSERT OVERWRITE TABLE odps_user_loan_order_attribute PARTITION (pt)
SELECT  
	CASE WHEN b.order_id IS NOT NULL THEN b.order_id ELSE a.order_id END AS order_id,
	CASE WHEN b.order_id IS NOT NULL THEN b.user_id ELSE a.user_id END AS user_id,
	CASE WHEN b.order_id IS NOT NULL THEN b.check_type ELSE a.check_type END AS check_type,
	CASE WHEN b.order_id IS NOT NULL THEN b.after_status ELSE a.after_status END AS after_status,
	CASE WHEN b.order_id IS NOT NULL THEN b.checked_at ELSE a.checked_at END AS checked_at,
	CASE WHEN b.order_id IS NOT NULL THEN b.tree ELSE a.tree END AS tree,
	CASE WHEN b.order_id IS NOT NULL THEN b.operator_name ELSE a.operator_name END AS operator_name,
	CASE WHEN b.order_id IS NOT NULL THEN b.created_at ELSE a.created_at END AS created_at,
	CASE WHEN b.order_id IS NOT NULL THEN b.updated_at ELSE a.updated_at END AS updated_at,
	CASE WHEN b.order_id IS NOT NULL THEN b.is_active ELSE a.is_active END AS is_active,
	CASE WHEN b.order_id IS NOT NULL THEN b.rank_data ELSE a.rank_data END AS rank_data,
	CASE WHEN b.order_id IS NOT NULL THEN b.is_new ELSE a.is_new END AS is_new,
	CASE WHEN b.order_id IS NOT NULL THEN b.amount ELSE a.amount END AS amount,

	CASE WHEN b.user_id IS NOT NULL THEN TO_CHAR(FROM_UNIXTIME(b.created_at), 'yyyymmdd') ELSE TO_CHAR(FROM_UNIXTIME(a.created_at), 'yyyymmdd') END AS pt
FROM
odps_user_loan_order_attribute a 
FULL OUTER JOIN odps_user_loan_order_attribute_inc b
ON a.order_id  = b.order_id ;


--- 增量数据导入到增量列表集合中
INSERT OVERWRITE TABLE odps_user_loan_order_attribute_inc_list PARTITION (pt='${bdp.system.bizdate}') 
SELECT 
order_id, user_id, check_type, after_status, checked_at, tree, operator_name, created_at, updated_at, is_active, rank_data, is_new, amount
FROM odps_user_loan_order_attribute_inc 
WHERE pt='${bdp.system.bizdate}';


--- 删除无用数据
ALTER TABLE odps_user_loan_order_attribute_inc DROP IF EXISTS PARTITION (pt='${bdp.system.bizdate}'); 


-- 创建快照目标表
CREATE TABLE odps_user_loan_order_attribute_kz_${bdp.system.bizdate} LIKE odps_user_loan_order_attribute;

-- 将数据定时导入到快照表中
INSERT OVERWRITE TABLE odps_user_loan_order_attribute_kz_${bdp.system.bizdate} PARTITION (pt) 
SELECT 
order_id, user_id, check_type, after_status, checked_at, tree, operator_name, created_at, updated_at, is_active, rank_data, is_new, amount, pt
FROM odps_user_loan_order_attribute;